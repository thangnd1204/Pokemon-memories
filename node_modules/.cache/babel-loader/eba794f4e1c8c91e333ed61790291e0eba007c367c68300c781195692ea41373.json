{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_main_screen = _resolveComponent(\"main-screen\");\n  const _component_interact_screen = _resolveComponent(\"interact-screen\");\n  const _component_coppy_right_screen = _resolveComponent(\"coppy-right-screen\");\n  const _component_result_screen = _resolveComponent(\"result-screen\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_ctx.statusMatch === 'default' ? (_openBlock(), _createBlock(_component_main_screen, {\n    key: 0,\n    onOnStart: _cache[0] || (_cache[0] = $event => _ctx.onHandlelBeforeStart($event))\n  })) : _createCommentVNode(\"v-if\", true), _ctx.statusMatch === 'match' ? (_openBlock(), _createBlock(_component_interact_screen, {\n    key: 1,\n    cardsContext: _ctx.settings.cardsContext,\n    onOnFinish: _ctx.onGetResult\n  }, null, 8 /* PROPS */, [\"cardsContext\", \"onOnFinish\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_coppy_right_screen), _createVNode(_component_result_screen)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_ctx","statusMatch","_createBlock","_component_main_screen","key","onOnStart","_cache","$event","onHandlelBeforeStart","_createCommentVNode","_component_interact_screen","cardsContext","settings","onOnFinish","onGetResult","_createVNode","_component_coppy_right_screen","_component_result_screen"],"sources":["/home/tmi-pc/Vue-cli/poke-memmories/src/App.vue"],"sourcesContent":["<template>\n  <main-screen\n    v-if=\"statusMatch === 'default'\"\n    @onStart=\"onHandlelBeforeStart($event)\"\n  />\n  <interact-screen\n    v-if=\"statusMatch === 'match'\"\n    :cardsContext=\"settings.cardsContext\"\n    @onFinish=\"onGetResult\"\n  />\n  <coppy-right-screen />\n  <result-screen />\n</template>\n\n<script>\nimport MainScreen from \"./components/MainScreen.vue\";\nimport CoppyRightScreen from \"./components/CoppyRightScreen.vue\";\nimport ResultScreen from \"./components/ResultScreen.vue\";\nimport InteractScreen from \"./components/InteractScreen.vue\";\nimport { shuffled } from \"./utils/array\";\nimport\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      settings: {\n        totalOfBlocks: 0,\n        cardsContext: [],\n        startedAt: null,\n      },\n      statusMatch: \"default\",\n    };\n  },\n  components: {\n    MainScreen,\n    CoppyRightScreen,\n    ResultScreen,\n    InteractScreen,\n  },\n  methods: {\n    onHandlelBeforeStart(config) {\n      console.log(\"1111\", config);\n      this.settings.totalOfBlocks = config.totalOfBlocks;\n      const firstCards = Array.from(\n        {\n          length: this.settings.totalOfBlocks / 2,\n        },\n        (_, i) => i + 1\n      );\n      const secondCards = [...firstCards];\n      const cards = [...firstCards, ...secondCards];\n      console.log(cards);\n      this.settings.cardsContext = shuffled(\n        shuffled(shuffled(shuffled(cards)))\n      );\n      this.settings.startedAt = new Date().getTime();\n      console.log(this.settings.cardsContext);\n      this.statusMatch = \"match\";\n    },\n    onGetResult() {\n      this.timer = new Date().getTime() - this.settings.startedAt;\n      this.statusMatch = \"result\";\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;;uBAAAA,mBAAA,CAAAC,SAAA,SAEUC,IAAA,CAAAC,WAAW,kB,cADnBC,YAAA,CAGEC,sBAAA;IAJJC,GAAA;IAGKC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEP,IAAA,CAAAQ,oBAAoB,CAACD,MAAM;QAHzCE,mBAAA,gBAMUT,IAAA,CAAAC,WAAW,gB,cADnBC,YAAA,CAIEQ,0BAAA;IATJN,GAAA;IAOKO,YAAY,EAAEX,IAAA,CAAAY,QAAQ,CAACD,YAAY;IACnCE,UAAQ,EAAEb,IAAA,CAAAc;6DARfL,mBAAA,gBAUEM,YAAA,CAAsBC,6BAAA,GACtBD,YAAA,CAAiBE,wBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}