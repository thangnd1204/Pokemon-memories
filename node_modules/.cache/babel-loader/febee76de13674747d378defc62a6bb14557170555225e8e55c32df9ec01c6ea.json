{"ast":null,"code":"import _toConsumableArray from \"/home/tmi-pc/Vue-cli/Pokemon-memories/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport MainScreen from \"./components/MainScreen.vue\";\nimport CopyRight from \"./components/CopyRight.vue\";\nimport ResultScreen from \"./components/ResultScreen.vue\";\nimport InteractScreen from \"./components/InteractScreen.vue\";\nimport { shuffled } from \"./utils/array\";\nexport default {\n  name: \"App\",\n  components: {\n    MainScreen: MainScreen,\n    CopyRight: CopyRight,\n    ResultScreen: ResultScreen,\n    InteractScreen: InteractScreen\n  },\n  data: function data() {\n    return {\n      settings: {\n        totalOfBlocks: 0,\n        cardsContext: [],\n        startedAt: null\n      },\n      statusMatch: \"default\"\n    };\n  },\n  methods: {\n    onHandlelBeforeStart: function onHandlelBeforeStart(config) {\n      this.settings.totalOfBlocks = config.totalOfBlocks;\n      var firstCards = Array.from({\n        length: this.settings.totalOfBlocks / 2\n      }, function (_, i) {\n        return i + 1;\n      });\n      var secondCards = [].concat(firstCards);\n      var cards = [].concat(firstCards, _toConsumableArray(secondCards));\n      this.settings.cardsContext = shuffled(shuffled(shuffled(shuffled(cards))));\n      this.settings.startedAt = new Date().getTime();\n      console.log(this.settings.cardsContext);\n      this.statusMatch = \"match\";\n    },\n    onGetResult: function onGetResult() {\n      this.timer = new Date().getTime() - this.settings.startedAt;\n      this.statusMatch = \"result\";\n    }\n  }\n};","map":{"version":3,"names":["MainScreen","CopyRight","ResultScreen","InteractScreen","shuffled","name","components","data","settings","totalOfBlocks","cardsContext","startedAt","statusMatch","methods","onHandlelBeforeStart","config","firstCards","Array","from","length","_","i","secondCards","concat","cards","_toConsumableArray","Date","getTime","console","log","onGetResult","timer"],"sources":["/home/tmi-pc/Vue-cli/Pokemon-memories/src/App.vue"],"sourcesContent":["<template>\n  <main-screen\n    v-if=\"statusMatch === 'default'\"\n    @onStart=\"onHandlelBeforeStart($event)\"\n  />\n  <interact-screen\n    v-if=\"statusMatch === 'match'\"\n    :cardsContext=\"settings.cardsContext\"\n    @onFinish=\"onGetResult\"\n  />\n  <result-screen\n    v-if=\"statusMatch === 'result'\"\n    :timer=\"timer\"\n    @onStartAgain=\"statusMatch = 'default'\"\n  />\n  <copy-right />\n</template>\n\n<script>\nimport MainScreen from \"./components/MainScreen.vue\";\nimport CopyRight from \"./components/CopyRight.vue\";\nimport ResultScreen from \"./components/ResultScreen.vue\";\nimport InteractScreen from \"./components/InteractScreen.vue\";\nimport { shuffled } from \"./utils/array\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainScreen,\n    CopyRight,\n    ResultScreen,\n    InteractScreen,\n  },\n  data() {\n    return {\n      settings: {\n        totalOfBlocks: 0,\n        cardsContext: [],\n        startedAt: null,\n      },\n      statusMatch: \"default\",\n    };\n  },\n  methods: {\n    onHandlelBeforeStart(config) {\n      this.settings.totalOfBlocks = config.totalOfBlocks;\n      const firstCards = Array.from(\n        {\n          length: this.settings.totalOfBlocks / 2,\n        },\n        (_, i) => i + 1\n      );\n      const secondCards = [...firstCards];\n      const cards = [...firstCards, ...secondCards];\n      this.settings.cardsContext = shuffled(\n        shuffled(shuffled(shuffled(cards)))\n      );\n      this.settings.startedAt = new Date().getTime();\n      console.log(this.settings.cardsContext);\n      this.statusMatch = \"match\";\n    },\n    onGetResult() {\n      this.timer = new Date().getTime() - this.settings.startedAt;\n      this.statusMatch = \"result\";\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;AAmBA,OAAOA,UAAS,MAAO,6BAA6B;AACpD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,YAAW,MAAO,+BAA+B;AACxD,OAAOC,cAAa,MAAO,iCAAiC;AAC5D,SAASC,QAAO,QAAS,eAAe;AAExC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVN,UAAU,EAAVA,UAAU;IACVC,SAAS,EAATA,SAAS;IACTC,YAAY,EAAZA,YAAY;IACZC,cAAc,EAAdA;EACF,CAAC;EACDI,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,aAAa,EAAE,CAAC;QAChBC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE;MACb,CAAC;MACDC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,oBAAoB,WAAAA,qBAACC,MAAM,EAAE;MAC3B,IAAI,CAACP,QAAQ,CAACC,aAAY,GAAIM,MAAM,CAACN,aAAa;MAClD,IAAMO,UAAS,GAAIC,KAAK,CAACC,IAAI,CAC3B;QACEC,MAAM,EAAE,IAAI,CAACX,QAAQ,CAACC,aAAY,GAAI;MACxC,CAAC,EACD,UAACW,CAAC,EAAEC,CAAC;QAAA,OAAKA,CAAA,GAAI;MAAA,CAChB,CAAC;MACD,IAAMC,WAAU,MAAAC,MAAA,CAAQP,UAAU,CAAC;MACnC,IAAMQ,KAAI,MAAAD,MAAA,CAAQP,UAAU,EAAAS,kBAAA,CAAKH,WAAW,EAAC;MAC7C,IAAI,CAACd,QAAQ,CAACE,YAAW,GAAIN,QAAQ,CACnCA,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAACoB,KAAK,CAAC,CAAC,CACpC,CAAC;MACD,IAAI,CAAChB,QAAQ,CAACG,SAAQ,GAAI,IAAIe,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAC9CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,QAAQ,CAACE,YAAY,CAAC;MACvC,IAAI,CAACE,WAAU,GAAI,OAAO;IAC5B,CAAC;IACDkB,WAAW,WAAAA,YAAA,EAAG;MACZ,IAAI,CAACC,KAAI,GAAI,IAAIL,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,IAAI,CAACnB,QAAQ,CAACG,SAAS;MAC3D,IAAI,CAACC,WAAU,GAAI,QAAQ;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}